{"ast":null,"code":"import _slicedToArray from \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js\";\n\nimport React, { useEffect, lazy } from \"react\";\nimport { getMoviesList } from \"../../queries\";\nimport { useQuery } from \"react-query\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ACTIONS } from '../../redux';\nvar MovieList = lazy(function () {\n  return import(\"../../components/movie-card\");\n});\n\nvar MovieListingView = function MovieListingView() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      skip = _React$useState2[0],\n      setSkip = _React$useState2[1];\n\n  var _useQuery = useQuery(getMoviesList, {\n    skip: skip\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var authors = useSelector(function (state) {\n    return state.authors;\n  });\n  var dispatch = useDispatch();\n  React.useEffect(function () {\n    // check whether data exists\n    if (!loading && !!data) {\n      setSkip(true);\n    }\n  }, [data, loading]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, \"There was an Error \", error);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, \"Loading....\");\n  }\n\n  if (data) {\n    dispatch({\n      type: ACTIONS.SET_ALL_AUTHORS,\n      payload: {\n        authors: data.data\n      }\n    });\n  }\n\n  console.log(\"---------authors------\");\n  console.log(authors);\n  console.log(\"---------authors------\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, authors.map(function (userDetails) {\n    return /*#__PURE__*/React.createElement(MovieList, {\n      key: \"\".concat(userDetails.firstName, \"-\").concat(userDetails.lastName),\n      user: userDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nMovieListingView.displayName = \"MovieListingView\";\nexport default MovieListingView;","map":{"version":3,"sources":["/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js"],"names":["React","useEffect","lazy","getMoviesList","useQuery","useSelector","useDispatch","ACTIONS","MovieList","MovieListingView","useState","skip","setSkip","data","loading","error","authors","state","dispatch","type","SET_ALL_AUTHORS","payload","console","log","map","userDetails","firstName","lastName","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAGA,IAAMC,SAAS,GAAGN,IAAI,CAAC;AAAA,SAAM,OAAO,6BAAP,CAAN;AAAA,CAAD,CAAtB;;AAEA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,wBACLT,KAAK,CAACU,QAAN,CAAe,KAAf,CADK;AAAA;AAAA,MACtBC,IADsB;AAAA,MAChBC,OADgB;;AAAA,kBAEKR,QAAQ,CAACD,aAAD,EAAgB;AAAEQ,IAAAA,IAAI,EAAJA;AAAF,GAAhB,CAFb;AAAA,MAErBE,IAFqB,aAErBA,IAFqB;AAAA,MAEfC,OAFe,aAEfA,OAFe;AAAA,MAELC,KAFK,aAELA,KAFK;;AAG7B,MAAMC,OAAO,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACD,OAAjB;AAAA,GAAD,CAA3B;AACA,MAAME,QAAQ,GAAGZ,WAAW,EAA5B;AAEAN,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpB;AACA,QAAI,CAACa,OAAD,IAAY,CAAC,CAACD,IAAlB,EAAwB;AACtBD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GALD,EAKG,CAACC,IAAD,EAAOC,OAAP,CALH;;AAOA,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBA,KAAzB,CAAP;AACD;;AACD,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,MAAGA,IAAH,EAAQ;AACNK,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,OAAO,CAACa,eADP;AAEPC,MAAAA,OAAO,EAAE;AACPL,QAAAA,OAAO,EAAEH,IAAI,CAACA;AADP;AAFF,KAAD,CAAR;AAMD;;AAGDS,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,CAACQ,GAAR,CAAY,UAACC,WAAD;AAAA,wBACX,oBAAC,SAAD;AAAW,MAAA,GAAG,YAAKA,WAAW,CAACC,SAAjB,cAA8BD,WAAW,CAACE,QAA1C,CAAd;AAAoE,MAAA,IAAI,EAAEF,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADF;AAOD,CAzCD;;AA2CAhB,gBAAgB,CAACmB,WAAjB,GAA+B,kBAA/B;AAEA,eAAenB,gBAAf","sourcesContent":["import React, { useEffect, lazy } from \"react\";\nimport { getMoviesList } from \"../../queries\";\n\nimport { useQuery } from \"react-query\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ACTIONS } from '../../redux';\n\n\nconst MovieList = lazy(() => import(\"../../components/movie-card\"));\n\nconst MovieListingView = () => {\n  const [skip, setSkip] = React.useState(false)\n  const { data, loading,  error } = useQuery(getMoviesList, { skip });\n  const authors = useSelector((state) => state.authors);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    // check whether data exists\n    if (!loading && !!data) {\n      setSkip(true)\n    }\n  }, [data, loading])\n\n  if (error) {\n    return <div>There was an Error {error}</div>;\n  }\n  if (!data) {\n    return <div>Loading....</div>;\n  }\n  if(data){\n    dispatch({\n      type: ACTIONS.SET_ALL_AUTHORS,\n      payload: {\n        authors: data.data\n      },\n    });\n  }\n \n\n  console.log(\"---------authors------\");\n  console.log(authors);\n  console.log(\"---------authors------\");\n  \n\n  return (\n    <div>\n      {authors.map((userDetails) => (\n        <MovieList key={`${userDetails.firstName}-${userDetails.lastName}`} user={userDetails} />\n      ))}\n    </div>\n  );\n};\n\nMovieListingView.displayName = \"MovieListingView\";\n\nexport default MovieListingView;\n"]},"metadata":{},"sourceType":"module"}