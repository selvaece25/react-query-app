{"ast":null,"code":"import _slicedToArray from \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/profile/listing.js\";\n\nimport React, { useEffect, lazy } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getPostList } from '../../queries';\nimport { useQuery } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ACTIONS } from '../../redux';\nvar MovieList = lazy(function () {\n  return import('../../components/movie-card');\n});\n\nvar ProfileListingView = function ProfileListingView() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      skip = _React$useState2[0],\n      setSkip = _React$useState2[1];\n\n  var _useQuery = useQuery(['Movies', id], getPostList, {\n    skip: skip\n  }),\n      isLoading = _useQuery.isLoading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  var authors = useSelector(function (state) {\n    return state.authors;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!isLoading && data && data.data) {\n      setSkip(true);\n      dispatch({\n        type: ACTIONS.SET_ALL_AUTHORS,\n        payload: {\n          authors: data.data\n        }\n      });\n    }\n  }, [data, isLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"There was an Error \", error);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return refetch();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"Loading....\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, authors.map(function (userDetails) {\n    return /*#__PURE__*/React.createElement(MovieList, {\n      key: \"\".concat(userDetails.firstName, \"-\").concat(userDetails.lastName),\n      user: userDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nProfileListingView.displayName = 'ProfileListingView';\nexport default ProfileListingView;","map":{"version":3,"sources":["/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/profile/listing.js"],"names":["React","useEffect","lazy","useParams","getPostList","useQuery","useSelector","useDispatch","ACTIONS","MovieList","ProfileListingView","id","useState","skip","setSkip","isLoading","error","data","refetch","authors","state","dispatch","type","SET_ALL_AUTHORS","payload","map","userDetails","firstName","lastName","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAAUC,SAAV,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,IAAMC,SAAS,GAAGP,IAAI,CAAC;AAAA,SAAM,OAAO,6BAAP,CAAN;AAAA,CAAD,CAAtB;;AAEA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,mBAElBP,SAAS,EAFS;AAAA,MAEzBQ,EAFyB,cAEzBA,EAFyB;;AAAA,wBAIPX,KAAK,CAACY,QAAN,CAAe,KAAf,CAJO;AAAA;AAAA,MAIxBC,IAJwB;AAAA,MAIlBC,OAJkB;;AAAA,kBAKaT,QAAQ,CAClD,CAAC,QAAD,EAAWM,EAAX,CADkD,EAElDP,WAFkD,EAGlD;AAAES,IAAAA,IAAI,EAAJA;AAAF,GAHkD,CALrB;AAAA,MAKvBE,SALuB,aAKvBA,SALuB;AAAA,MAKZC,KALY,aAKZA,KALY;AAAA,MAKLC,IALK,aAKLA,IALK;AAAA,MAKCC,OALD,aAKCA,OALD;;AAU/B,MAAMC,OAAO,GAAGb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACD,OAAjB;AAAA,GAAD,CAA3B;AACA,MAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACc,SAAD,IAAcE,IAAd,IAAsBA,IAAI,CAACA,IAA/B,EAAqC;AACnCH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAO,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEd,OAAO,CAACe,eADP;AAEPC,QAAAA,OAAO,EAAE;AACPL,UAAAA,OAAO,EAAEF,IAAI,CAACA;AADP;AAFF,OAAD,CAAR;AAMD;AACF,GAVQ,EAUN,CAACA,IAAD,EAAOF,SAAP,CAVM,CAAT,CAb+B,CAuBR;;AAEvB,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBA,KAAzB,CAAP;AACD;;AACD,MAAI,CAACC,IAAL,EAAW;AACT,wBAAO;AAAK,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,EAAb;AAAA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACM,GAAR,CAAY,UAACC,WAAD;AAAA,wBACX,oBAAC,SAAD;AACE,MAAA,GAAG,YAAKA,WAAW,CAACC,SAAjB,cAA8BD,WAAW,CAACE,QAA1C,CADL;AAEE,MAAA,IAAI,EAAEF,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADF;AAUD,CAzCD;;AA2CAhB,kBAAkB,CAACmB,WAAnB,GAAiC,oBAAjC;AAEA,eAAenB,kBAAf","sourcesContent":["import React, { useEffect, lazy } from 'react';\nimport {  useParams } from \"react-router-dom\";\nimport { getPostList } from '../../queries';\n\nimport { useQuery } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ACTIONS } from '../../redux';\n\nconst MovieList = lazy(() => import('../../components/movie-card'));\n\nconst ProfileListingView = () => {\n\n  let { id } = useParams();\n\n  const [skip, setSkip] = React.useState(false);\n  const { isLoading, error, data, refetch } = useQuery(\n    ['Movies', id],\n    getPostList,\n    { skip },\n  );\n  const authors = useSelector((state) => state.authors);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoading && data && data.data) {\n      setSkip(true);\n      dispatch({\n        type: ACTIONS.SET_ALL_AUTHORS,\n        payload: {\n          authors: data.data,\n        },\n      });\n    }\n  }, [data, isLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return <div>There was an Error {error}</div>;\n  }\n  if (!data) {\n    return <div onClick={() => refetch()}>Loading....</div>;\n  }\n  return (\n    <div>\n      {authors.map((userDetails) => (\n        <MovieList\n          key={`${userDetails.firstName}-${userDetails.lastName}`}\n          user={userDetails}\n        />\n      ))}\n    </div>\n  );\n};\n\nProfileListingView.displayName = 'ProfileListingView';\n\nexport default ProfileListingView;\n"]},"metadata":{},"sourceType":"module"}