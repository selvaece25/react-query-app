{"ast":null,"code":"import _slicedToArray from \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js\";\n\nimport React, { useEffect, lazy } from 'react';\nimport { useAuthors } from '../../queries';\nimport { useQuery } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ACTIONS } from '../../redux';\nvar MovieList = lazy(function () {\n  return import('../../components/movie-card');\n});\n\nvar MovieListingView = function MovieListingView() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      skip = _React$useState2[0],\n      setSkip = _React$useState2[1];\n\n  var _useQuery = useQuery('Movies', getMoviesList, {\n    skip: skip\n  }),\n      isLoading = _useQuery.isLoading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  var authors = useSelector(function (state) {\n    return state.authors;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!isLoading && data && data.data) {\n      setSkip(true);\n      dispatch({\n        type: ACTIONS.SET_ALL_AUTHORS,\n        payload: {\n          authors: data.data\n        }\n      });\n    }\n  }, [data, isLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, \"There was an Error \", error);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return refetch();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"Loading....\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, authors.map(function (userDetails) {\n    return /*#__PURE__*/React.createElement(MovieList, {\n      key: \"\".concat(userDetails.firstName, \"-\").concat(userDetails.lastName),\n      user: userDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nMovieListingView.displayName = 'MovieListingView';\nexport default MovieListingView;","map":{"version":3,"sources":["/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js"],"names":["React","useEffect","lazy","useAuthors","useQuery","useSelector","useDispatch","ACTIONS","MovieList","MovieListingView","useState","skip","setSkip","getMoviesList","isLoading","error","data","refetch","authors","state","dispatch","type","SET_ALL_AUTHORS","payload","map","userDetails","firstName","lastName","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,IAAMC,SAAS,GAAGN,IAAI,CAAC;AAAA,SAAM,OAAO,6BAAP,CAAN;AAAA,CAAD,CAAtB;;AAEA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,wBACLT,KAAK,CAACU,QAAN,CAAe,KAAf,CADK;AAAA;AAAA,MACtBC,IADsB;AAAA,MAChBC,OADgB;;AAAA,kBAEeR,QAAQ,CAClD,QADkD,EAElDS,aAFkD,EAGlD;AAAEF,IAAAA,IAAI,EAAJA;AAAF,GAHkD,CAFvB;AAAA,MAErBG,SAFqB,aAErBA,SAFqB;AAAA,MAEVC,KAFU,aAEVA,KAFU;AAAA,MAEHC,IAFG,aAEHA,IAFG;AAAA,MAEGC,OAFH,aAEGA,OAFH;;AAO7B,MAAMC,OAAO,GAAGb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACD,OAAjB;AAAA,GAAD,CAA3B;AACA,MAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,SAAD,IAAcE,IAAd,IAAsBA,IAAI,CAACA,IAA/B,EAAqC;AACnCJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAQ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEd,OAAO,CAACe,eADP;AAEPC,QAAAA,OAAO,EAAE;AACPL,UAAAA,OAAO,EAAEF,IAAI,CAACA;AADP;AAFF,OAAD,CAAR;AAMD;AACF,GAVQ,EAUN,CAACA,IAAD,EAAOF,SAAP,CAVM,CAAT,CAV6B,CAoBN;;AAEvB,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBA,KAAzB,CAAP;AACD;;AACD,MAAI,CAACC,IAAL,EAAW;AACT,wBAAO;AAAK,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,EAAb;AAAA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACM,GAAR,CAAY,UAACC,WAAD;AAAA,wBACX,oBAAC,SAAD;AACE,MAAA,GAAG,YAAKA,WAAW,CAACC,SAAjB,cAA8BD,WAAW,CAACE,QAA1C,CADL;AAEE,MAAA,IAAI,EAAEF,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,CADF;AAUD,CAtCD;;AAwCAhB,gBAAgB,CAACmB,WAAjB,GAA+B,kBAA/B;AAEA,eAAenB,gBAAf","sourcesContent":["import React, { useEffect, lazy } from 'react';\nimport { useAuthors } from '../../queries';\n\nimport { useQuery } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ACTIONS } from '../../redux';\n\nconst MovieList = lazy(() => import('../../components/movie-card'));\n\nconst MovieListingView = () => {\n  const [skip, setSkip] = React.useState(false);\n  const { isLoading, error, data, refetch } = useQuery(\n    'Movies',\n    getMoviesList,\n    { skip },\n  );\n  const authors = useSelector((state) => state.authors);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoading && data && data.data) {\n      setSkip(true);\n      dispatch({\n        type: ACTIONS.SET_ALL_AUTHORS,\n        payload: {\n          authors: data.data,\n        },\n      });\n    }\n  }, [data, isLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return <div>There was an Error {error}</div>;\n  }\n  if (!data) {\n    return <div onClick={() => refetch()}>Loading....</div>;\n  }\n  return (\n    <div>\n      {authors.map((userDetails) => (\n        <MovieList\n          key={`${userDetails.firstName}-${userDetails.lastName}`}\n          user={userDetails}\n        />\n      ))}\n    </div>\n  );\n};\n\nMovieListingView.displayName = 'MovieListingView';\n\nexport default MovieListingView;\n"]},"metadata":{},"sourceType":"module"}