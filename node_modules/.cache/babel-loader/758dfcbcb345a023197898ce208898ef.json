{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js\";\n\nimport React, { useState, lazy } from \"react\";\nimport { getMoviesList, getPokemonList } from \"../../queries\";\nimport { useQuery } from \"react-query\";\nvar MovieList = lazy(function () {\n  return import(\"../../components/movie-card\");\n});\nvar AddFavourites = lazy(function () {\n  return import(\"../../components/add-favourite\");\n});\n\nvar MovieListingView = function MovieListingView() {\n  var _useQuery = useQuery(\"Movies\", getMoviesList, {}),\n      data = _useQuery.data,\n      refetch = _useQuery.refetch,\n      error = _useQuery.error; // Short circut if there is an error state and return.\n\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, \"There was an Error \", error);\n  } // If there is no data do return nothing\n\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return refetch();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    }, \"Fetch Pokemon\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, data.data.map(function (userDetails) {\n    return /*#__PURE__*/React.createElement(MovieList, {\n      key: userDetails.firstName,\n      user: userDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nMovieListingView.displayName = \"MovieListingView\";\nexport default MovieListingView;","map":{"version":3,"sources":["/Users/selvakumar/Documents/personal.nosync/coding/react-query-app/src/modules/movies/listing.js"],"names":["React","useState","lazy","getMoviesList","getPokemonList","useQuery","MovieList","AddFavourites","MovieListingView","data","refetch","error","map","userDetails","firstName","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,eAA9C;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,IAAMC,SAAS,GAAGJ,IAAI,CAAC;AAAA,SAAM,OAAO,6BAAP,CAAN;AAAA,CAAD,CAAtB;AACA,IAAMK,aAAa,GAAGL,IAAI,CAAC;AAAA,SAAM,OAAO,gCAAP,CAAN;AAAA,CAAD,CAA1B;;AAEA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACIH,QAAQ,CAAC,QAAD,EAAWF,aAAX,EAA0B,EAA1B,CADZ;AAAA,MACrBM,IADqB,aACrBA,IADqB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM,EAE7B;;;AACA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBA,KAAzB,CAAP;AACD,GAL4B,CAM7B;;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,EAAb;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACA,IAAL,CAAUG,GAAV,CAAc,UAACC,WAAD;AAAA,wBACb,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,WAAW,CAACC,SAA5B;AAAuC,MAAA,IAAI,EAAED,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CADF;AAOD,CAjBD;;AAmBAL,gBAAgB,CAACO,WAAjB,GAA+B,kBAA/B;AAEA,eAAeP,gBAAf","sourcesContent":["import React, { useState, lazy } from \"react\";\nimport { getMoviesList, getPokemonList } from \"../../queries\";\n\nimport { useQuery } from \"react-query\";\n\nconst MovieList = lazy(() => import(\"../../components/movie-card\"));\nconst AddFavourites = lazy(() => import(\"../../components/add-favourite\"));\n\nconst MovieListingView = () => {\n  const { data, refetch, error } = useQuery(\"Movies\", getMoviesList, {});\n  // Short circut if there is an error state and return.\n  if (error) {\n    return <div>There was an Error {error}</div>;\n  }\n  // If there is no data do return nothing\n  if (!data) {\n    return <button onClick={() => refetch()}>Fetch Pokemon</button>;\n  }\n  return (\n    <div>\n      {data.data.map((userDetails) => (\n        <MovieList key={userDetails.firstName} user={userDetails} />\n      ))}\n    </div>\n  );\n};\n\nMovieListingView.displayName = \"MovieListingView\";\n\nexport default MovieListingView;\n"]},"metadata":{},"sourceType":"module"}